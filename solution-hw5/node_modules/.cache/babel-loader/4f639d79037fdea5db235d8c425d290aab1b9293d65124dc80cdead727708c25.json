{"ast":null,"code":"var _jsxFileName = \"/Users/rebekahjulicher/School/PUI/pui-homework/solution-hw5/src/js/Page.js\";\nimport React, { Component } from 'react';\nimport Product from './Product.js';\nimport Navbar from './Navbar.js';\nimport { Roll, glazingOptions, packSizeOptions, typeOptions } from './HelperStructs.js';\nimport CartSection from './CartSection.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleCart = () => {\n      this.setState({\n        cartActive: !this.state.cartActive\n      });\n    };\n    // Method passed between components to update cart contents\n    this.updateCart = (type, glazing, packSize, price) => {\n      this.setState(prevState => ({\n        cartContent: [...prevState.cartContent, new Roll(type, glazing, packSize, price)],\n        totalCost: (parseFloat(prevState.totalCost) + parseFloat(price)).toFixed(2)\n      }));\n    };\n    this.updatePrice = (updatedListing, id) => {\n      let currRoll = updatedListing[id];\n      currRoll.price = ((typeOptions[currRoll.type].basePrice + glazingOptions[currRoll.glazing].glazingPrice) * packSizeOptions[currRoll.packSize].packPrice).toFixed(2);\n    };\n    // Very short update functions, but having them keeps it clear where things are happening\n    this.updatePack = (value, id) => {\n      //console.log(\"updating packSize of \" + id + \" to \" + value);\n      let updatedListing = [...this.state.listingContent];\n      updatedListing[id].packSize = value;\n      this.updatePrice(updatedListing, id);\n      this.setState({\n        listingContent: updatedListing\n      });\n    };\n    this.updateGlazing = (value, id) => {\n      //console.log(\"updating glazing of \" + id + \" to \" + value);\n      let updatedListing = [...this.state.listingContent];\n      updatedListing[id].glazing = value;\n      this.updatePrice(updatedListing, id);\n      this.setState({\n        listingContent: updatedListing\n      });\n    };\n    this.removeCartItem = index => {\n      let updatedCart = [...this.state.cartContent];\n      let cost = (parseFloat(this.state.totalCost) - parseFloat(updatedCart.splice(index, 1)[0].price)).toFixed(2);\n      this.setState({\n        cartContent: updatedCart,\n        totalCost: cost\n      });\n    };\n    this.state = {\n      cartContent: [],\n      listingContent: [new Roll(0, 0, 0, 2.49), new Roll(1, 0, 0, 3.49), new Roll(2, 0, 0, 2.99), new Roll(3, 0, 0, 3.49), new Roll(4, 0, 0, 3.99), new Roll(5, 0, 0, 3.99)],\n      totalCost: 0.00,\n      cartActive: false,\n      search: \"\",\n      searchIsEmpty: false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Page\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        content: this.state.cartContent,\n        infoPopup: \"none\",\n        toggleCart: this.toggleCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartSection, {\n        cartContent: this.state.cartContent,\n        totalCost: this.state.totalCost,\n        active: this.state.cartActive,\n        removeCartItem: this.removeCartItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          id: \"searchInput\",\n          className: \"searchSegment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sortDropdown\",\n          className: \"searchSegment\",\n          children: \"sort by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sortDropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"basePrice\",\n            children: \"Base Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"catalog\",\n        children: this.state.listingContent.map((roll, idx) => {\n          //console.log(roll.type);\n          let rollName = typeOptions[roll.type].typeName.toLowerCase();\n          return rollName.includes(this.state.search) && /*#__PURE__*/_jsxDEV(Product, {\n            id: idx,\n            roll: roll,\n            glazeFunc: this.updateGlazing,\n            packFunc: this.updatePack,\n            cartFunc: this.updateCart\n          }, roll.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Page;","map":{"version":3,"names":["React","Component","Product","Navbar","Roll","glazingOptions","packSizeOptions","typeOptions","CartSection","jsxDEV","_jsxDEV","Page","constructor","props","toggleCart","setState","cartActive","state","updateCart","type","glazing","packSize","price","prevState","cartContent","totalCost","parseFloat","toFixed","updatePrice","updatedListing","id","currRoll","basePrice","glazingPrice","packPrice","updatePack","value","listingContent","updateGlazing","removeCartItem","index","updatedCart","cost","splice","search","searchIsEmpty","render","className","children","content","infoPopup","fileName","_jsxFileName","lineNumber","columnNumber","active","htmlFor","map","roll","idx","rollName","typeName","toLowerCase","includes","glazeFunc","packFunc","cartFunc"],"sources":["/Users/rebekahjulicher/School/PUI/pui-homework/solution-hw5/src/js/Page.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Product from './Product.js';\nimport Navbar from './Navbar.js';\nimport {Roll, glazingOptions, packSizeOptions, typeOptions} from './HelperStructs.js';\nimport CartSection from './CartSection.js';\n\nclass Page extends Component{\n  constructor(props){\n    super(props);\n    this.state = {cartContent: [],\n                  listingContent: [new Roll(0, 0, 0, 2.49), new Roll(1, 0, 0, 3.49), \n                                    new Roll(2, 0, 0, 2.99), new Roll(3, 0, 0, 3.49),\n                                    new Roll(4, 0, 0, 3.99), new Roll(5, 0, 0, 3.99)],\n                  totalCost: 0.00,\n                  cartActive: false,\n                  search: \"\",\n                  searchIsEmpty: false};\n  }\n\n  toggleCart = () => {\n    this.setState({cartActive: !this.state.cartActive});\n  }\n\n  // Method passed between components to update cart contents\n  updateCart = (type, glazing, packSize, price) => {\n    this.setState(prevState => ({\n      cartContent: [...prevState.cartContent, new Roll(type, glazing, packSize, price)],\n      totalCost: (parseFloat(prevState.totalCost) + parseFloat(price)).toFixed(2)}));\n  }\n\n  updatePrice = (updatedListing, id) => {\n    let currRoll = updatedListing[id];\n    currRoll.price = ((typeOptions[currRoll.type].basePrice + glazingOptions[currRoll.glazing].glazingPrice)\n                        * packSizeOptions[currRoll.packSize].packPrice).toFixed(2)\n  }\n\n  // Very short update functions, but having them keeps it clear where things are happening\n  updatePack = (value, id) => {\n    //console.log(\"updating packSize of \" + id + \" to \" + value);\n    let updatedListing = [...this.state.listingContent];\n    updatedListing[id].packSize = value;\n    this.updatePrice(updatedListing, id);\n    this.setState({listingContent: updatedListing});\n  }\n  \n  updateGlazing = (value, id) => {\n    //console.log(\"updating glazing of \" + id + \" to \" + value);\n    let updatedListing = [...this.state.listingContent];\n    updatedListing[id].glazing = value;\n    this.updatePrice(updatedListing, id);\n    this.setState({listingContent: updatedListing});\n  }\n\n  removeCartItem = (index) => {\n    let updatedCart = [...this.state.cartContent];\n    let cost = (parseFloat(this.state.totalCost) -\n                parseFloat(updatedCart.splice(index, 1)[0].price)).toFixed(2);\n    this.setState({cartContent: updatedCart, totalCost: cost})\n  }\n\n  render(){\n    return(\n      <div className=\"Page\">\n        <Navbar content={this.state.cartContent} infoPopup=\"none\" toggleCart={this.toggleCart}/>\n\n        <CartSection cartContent={this.state.cartContent}\n                      totalCost={this.state.totalCost}\n                      active={this.state.cartActive}\n                      removeCartItem={this.removeCartItem}/>\n        \n        <div className=\"searchSection\">\n          <input type=\"search\" id=\"searchInput\" className=\"searchSegment\"/>\n          <input type=\"submit\" value=\"Search\"/>\n          <label htmlFor=\"sortDropdown\" className=\"searchSegment\">sort by:</label>\n          <select id=\"sortDropdown\">\n            <option value=\"name\">Name</option>\n            <option value=\"basePrice\">Base Price</option>\n          </select>\n        </div>\n\n        <main className=\"catalog\">\n          {this.state.listingContent.map((roll, idx) => {\n            //console.log(roll.type);\n            let rollName = typeOptions[roll.type].typeName.toLowerCase();\n            return (rollName.includes(this.state.search) && \n            <Product\n              key       = {roll.type}\n              id        = {idx} \n              roll      = {roll}\n              glazeFunc = {this.updateGlazing} \n              packFunc  = {this.updatePack}\n              cartFunc  = {this.updateCart} />)\n          })}\n        </main>\n    </div>\n  )}\n}\n\nexport default Page;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}