{"ast":null,"code":"var _jsxFileName = \"/Users/rebekahjulicher/School/PUI/pui-homework/solution-hw5/src/js/Page.js\";\nimport React, { Component } from 'react';\nimport Product from './Product.js';\nimport Navbar from './Navbar.js';\nimport { Roll, glazingOptions, packSizeOptions, typeOptions } from './HelperStructs.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    // Method passed between components to update cart contents\n    this.updateCart = (type, glazing, packSize, price) => {\n      this.setState(prevState => ({\n        cartContent: [...prevState.cartContent, new Roll(type, glazing, packSize, price)],\n        totalCost: (parseFloat(prevState.totalCost) + parseFloat(price)).toFixed(2)\n      }));\n    };\n    // Very short update functions, but having them keeps it clear where things are happening\n    this.updatePack = e => {\n      this.setState({\n        packSize: e.currentTarget.value\n      });\n    };\n    this.updateGlazing = (value, id) => {\n      console.log(\"updating glazing of \" + id + \" to \" + value);\n      let updatedListing = [...this.state.listingContent];\n      updatedListing[id].glazing = value;\n      updatePrice;\n      this.setState({\n        listingContent: updatedListing\n      });\n    };\n    this.state = {\n      cartContent: [],\n      listingContent: [new Roll(0, 0, 0, 2.49), new Roll(1, 0, 0, 3.49), new Roll(2, 0, 0, 2.99), new Roll(3, 0, 0, 3.49), new Roll(4, 0, 0, 3.99), new Roll(5, 0, 0, 3.99)],\n      totalCost: 0.00\n    };\n  }\n  updatePrice(updatedListing, id) {\n    let currRoll = updatedListing[id];\n    currRoll.price = ((typeOptions[currRoll.type].basePrice + glazingOptions[currRoll.glazing].glazingPrice) * packSizeOptions[currRoll.packSize].packPrice).toFixed(2);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Page\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        content: this.state.cartContent,\n        priceTotal: this.state.totalCost,\n        infoPopup: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"catalog\",\n        children: this.state.listingContent.map((roll, idx) => {\n          //console.log(roll.type);\n          return /*#__PURE__*/_jsxDEV(Product, {\n            id: idx,\n            roll: roll,\n            glazeFunc: this.updateGlazing,\n            packFunc: this.updatePack,\n            cartFunc: this.updateCart\n          }, roll.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Page;","map":{"version":3,"names":["React","Component","Product","Navbar","Roll","glazingOptions","packSizeOptions","typeOptions","jsxDEV","_jsxDEV","Page","constructor","props","updateCart","type","glazing","packSize","price","setState","prevState","cartContent","totalCost","parseFloat","toFixed","updatePack","e","currentTarget","value","updateGlazing","id","console","log","updatedListing","state","listingContent","updatePrice","currRoll","basePrice","glazingPrice","packPrice","render","className","children","content","priceTotal","infoPopup","fileName","_jsxFileName","lineNumber","columnNumber","map","roll","idx","glazeFunc","packFunc","cartFunc"],"sources":["/Users/rebekahjulicher/School/PUI/pui-homework/solution-hw5/src/js/Page.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Product from './Product.js';\nimport Navbar from './Navbar.js';\nimport {Roll, glazingOptions, packSizeOptions, typeOptions} from './HelperStructs.js';\n\nclass Page extends Component{\n  constructor(props){\n    super(props);\n    this.state = {cartContent: [],\n                  listingContent: [new Roll(0, 0, 0, 2.49), new Roll(1, 0, 0, 3.49), \n                                    new Roll(2, 0, 0, 2.99), new Roll(3, 0, 0, 3.49),\n                                    new Roll(4, 0, 0, 3.99), new Roll(5, 0, 0, 3.99)],\n                  totalCost: 0.00};\n  }\n\n  // Method passed between components to update cart contents\n  updateCart = (type, glazing, packSize, price) => {\n    this.setState(prevState => ({\n      cartContent: [...prevState.cartContent, new Roll(type, glazing, packSize, price)],\n      totalCost: (parseFloat(prevState.totalCost) + parseFloat(price)).toFixed(2)}));\n  }\n\n  updatePrice(updatedListing, id){\n    let currRoll = updatedListing[id];\n    currRoll.price = ((typeOptions[currRoll.type].basePrice + glazingOptions[currRoll.glazing].glazingPrice)\n                        * packSizeOptions[currRoll.packSize].packPrice).toFixed(2)\n  }\n\n  // Very short update functions, but having them keeps it clear where things are happening\n  updatePack = (e) => {\n    this.setState({packSize: e.currentTarget.value});\n  }\n  updateGlazing = (value, id) => {\n    console.log(\"updating glazing of \" + id + \" to \" + value);\n    let updatedListing = [...this.state.listingContent];\n    updatedListing[id].glazing = value;\n    updatePrice\n    this.setState({listingContent: updatedListing});\n  }\n\n  render(){\n    return(\n      <div className=\"Page\">\n        <Navbar content={this.state.cartContent} priceTotal={this.state.totalCost} infoPopup=\"none\"/>\n\n        <main className=\"catalog\">\n          {this.state.listingContent.map((roll, idx) => {\n            //console.log(roll.type);\n            return <Product\n              key       = {roll.type}\n              id        = {idx} \n              roll      = {roll}\n              glazeFunc = {this.updateGlazing} \n              packFunc  = {this.updatePack}\n              cartFunc  = {this.updateCart} />\n          })}\n          {/*}\n          <Product id={0} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack}\n                    cartFunc = {this.updateCart} roll = {this.state.listingContent[0]}/>\n          \n          <Product id={1} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack} \n                    cartFunc = {this.updateCart}/>\n          \n          <Product id={2} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack} \n                    cartFunc = {this.updateCart}/>\n          \n          <Product id={3} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack} \n                    cartFunc = {this.updateCart}/>\n          \n          <Product id={4} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack} \n                    cartFunc = {this.updateCart}/>\n          \n          <Product id={5} glazeFunc = {this.updateGlazing} packFunc = {this.updatePack} \n                    cartFunc = {this.updateCart}/>\n          {*/}\n        </main>\n    </div>\n  )}\n}\n\nexport default Page;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}